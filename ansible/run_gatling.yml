---
- hosts: all
  roles:
    - gatling

- hosts: all
  tasks:
    - name: Cleaning previous runs
      file:
        path: "{{ gatling_results_dir }}"
        state: absent

    - name: Creating report dir
      file:
        path: "{{ gatling_report_dir }}"
        state: directory

- hosts: tag_Type_indigo_tests
  tasks:
    - name: Copy simulations
      copy:
        src: ../simulations/
        dest: "{{ gatling_simulations_dir }}"

    - name: Install tcconfig
      pip:
        name: tcconfig
      become: true
      become_user: root
      become_method: sudo
        
    - name: Limit bandwidth
      shell: "tcset --device eth0 {{ eth_limits }}"
      when: not(
          (eth_limits is undefined)
          or
          (eth_limits is none)
          or
          (eth_limits | trim == '')
        )
      become: true
      become_user: root
      become_method: sudo

    - name: Running simulations
      command: "{{ gatling_runner }} --no-reports --simulation {{ simulation_name }} --output-name report"

    - name: Rename result files
      shell: ls -t {{ gatling_results_dir }} | head -n 1 | xargs -I {} mv {{ gatling_results_dir }}/{}/simulation.log {{ gatling_report_dir }}/simulation-{{ inventory_hostname }}.log

    - name: Unlimit bandwidth
      shell: "tcdel --device eth0"
      when: not(
          (eth_limits is undefined)
          or
          (eth_limits is none)
          or
          (eth_limits | trim == '')
        )
      become: true
      become_user: root
      become_method: sudo

    - name: Gathering result files
      synchronize:
        src: "{{ gatling_report_dir }}"
        dest: "{{ gatling_report_dir }}"
        mode: pull
      delegate_to: "{{ groups['tag_Type_indigo_tests_controller'][0] }}"

- hosts: tag_Type_indigo_tests_controller
  tasks:
    - name: Aggregating simulations
      command: "{{ gatling_runner }} --reports-only report"

    - name: Download report
      synchronize:
        src: "{{ gatling_home }}/results/report/"
        dest: ../report
        mode: pull

- hosts: tag_Type_indigo_tests
  tasks:
    - name: Generate TMPoP logs
      shell: "docker logs indigo_tmapp_1 > {{ gatling_indigo_dir }}/{{ inventory_hostname }}_tmapp.log 2>&1"

    - name: Generate TMStore logs
      shell: "docker logs indigo_store_1 > {{ gatling_indigo_dir }}/{{ inventory_hostname }}_store.log 2>&1"

    - name: Download logs
      synchronize:
        src: "{{ gatling_indigo_dir }}/{{ inventory_hostname }}_*.log"
        dest: ../logs
        mode: pull
